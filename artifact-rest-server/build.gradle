import java.nio.file.Files
import java.nio.file.attribute.PosixFilePermission

ext.mainClassName = 'com.alpine.plugins.Main'

dependencies {

    compile project(':artifact-management-service')

    compile "org.glassfish.jersey.core:jersey-server:$jerseyVer"
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jerseyVer"

    runtime "org.slf4j:slf4j-nop:$slf4jVer"
}

task fatCapsule(type: FatCapsule) {
    applicationClass project.mainClassName
    reallyExecutable
}

task produceExecutable {
    def executable = rootProject.buildDir.toPath().resolve(project.name).toAbsolutePath();

    inputs.file(fatCapsule.archivePath)
    outputs.file(executable.toFile())
    doLast {
        ant.copy(
                file: fatCapsule.archivePath,
                toFile: executable.toString()
        )

        def permissions = Files.getPosixFilePermissions(executable);
        permissions.add(PosixFilePermission.OWNER_EXECUTE);
        Files.setPosixFilePermissions(executable, permissions);
    }
}

fatCapsule.finalizedBy produceExecutable

assemble.dependsOn fatCapsule
